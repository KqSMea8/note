option  ->  alt


块注释                  alt cmd /
切换全屏                control cmd f
拆分编辑器              cmd \
切换窗口                control w
打开终端                control `
删除右侧所有内容         cmd k cmd k 或 control k
删除左侧所有内容         cmd delete
删除行                  shift cmd k
在上面插入行            shift cmd enter
光标移动
    以单词为单位移动    option+左右方向键
    以行为单位移动      cmd+左右方向键
    以代码块为单位      cmd shift \
    以文档为单位移动    cmd+上下方向键
多按一个shift键，在移动光标的同时选中其中的文本

按住option移动方向键来移动行

代码格式化      option shift F
或选中一段代码，    cmd K cmd F


调换字符位置    ctrl t

调整字符大小写  选中一串字符，在命令面板里运行转换为大写/小写  cmd shift P   搜索transform

合并代码行      ctrl j

多光标
1、按住alt 然后点击鼠标到想添加光标的位置
2、cmd alt 加上下方向键
3、cmd d (单词)
4、alt shift i (代码块)

cmd+p 打开最近使用的文件列表 支持查询功能 按enter可以直接进入到对应文件  或cmd+enter 可以在新的编辑器窗口里打开
跳转到对应行数  Ctrl+g
cmd+p 输入文件名在后面加上:33 就会跳到对应文件的33行
cmd+shift+o  查看当前文件里面的所有符号 然后输入：  可以将符号进行分类查看
cmd+t 可以查找符号(全局)
cmd+F12  跳到定义


鼠标快捷键
双击选中单词  三击选中整行  四击选中整个文件

最左边有行号  可以单击行号来选中一行
在行号上按下鼠标然后上下移动  能选中多行代码


鼠标拖拽代码（拖放） 按住option相当于复制粘贴  直接拖拽是剪贴

Ctrl+空格 手动调出建议列表（在mac上会与系统默认快捷键有冲突，需要自己改  比较麻烦  所以这个功能比较鸡肋）
语言服务允许出现一些小错误，比如console.log   写console.lg也会出现正确的提示

快速预览
有时候当看到建议列表里面的某一个函数名，可能并不能立刻想起他的作用是什么，参数定义是什么样的，这时候可以单击当前这一项建议最右侧的蓝色图标
会出现一个快速预览的窗口

参数预览
当我们从建议列表里面选择了一个函数，然后输入括号，准备开始输入参数的时候会看到一个参数预览的悬浮框
通过这个参数预览的窗口我们可以知道这个函数可以传入那些参数，他们的参数类型是什么样的

可以通过设置editor.quickSuggestions来决定在什么语境下自动补全窗口会被唤出
  "editor.quickSuggestions": {
    "other": true,
    "comments": false,
    "strings": false
  }

参数预览窗口  editor.parameterHints.enabled  将其关闭
可以在设置里搜editor.suggest  自己玩玩

快速修复

重构
把光标放到变量名上  按F2  这个函数或者变量出现的地方就都会被修改  和替换不一样

关闭文本提示  editor.wordBasedSuggestions

代码折叠
cmd+option+左方括号
递归折叠
cmd+k   cmd+左方括号
全部折叠
cmd+k  cmd+o
展开
cmd+k  cmd+j

小地图
设置  editor.minimap

面包屑
breadcrumbs.enabled

查找 
cmd+f
cmd+g
默认不区分大小写  可以点击搜索框里大小写按钮或者cmd+option+c
全单词匹配  有时候我们搜索的单词恰好是别的某个单词中间的一部分，如果不希望这样的结果出现在搜索结果中，可以
点击第二个按钮或者cmd+oprion+w来关闭他
第三个是正则匹配  cmd+option+r
右边的是将选中的一段文本范围设置为接下来的搜索区域，然后只在这个区域内进行搜索
editor.find.seedSearchStringFromSelection
cmd+option+f搜索同时调出替换窗口


多文件搜索
cmd+shift+f
search.collapseResults  用来控制是否自动展开搜索结果，默认配置auto   会根据搜索结果的多少来决定是否
要将某个文件下的搜索结果展开，如果某个文件夹下的结果过多的话，就会将其暂时折叠
search.location  边栏的位置  左或者下
共享搜索记录
editor.find.globalFindClipboard和search.globalFindClipboard打开  在vscode中搜索关键词和记录会被
共享给系统，然后打开Safari或者chrome按下cmd+f就会自动填充搜索框



